<?xml version="1.0" encoding="utf-8"?>
<ui:PopUpWindowProxy xmlns:fx="http://ns.adobe.com/mxml/2009" 
					 xmlns:s="library://ns.adobe.com/flex/spark" 
					 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:ui="editor.ui.*" width="500" height="420" xmlns:extension="editor.extension.*">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import editor.cfg.ConfigManager;
			import editor.extension.ExEvent;
			import editor.utility.Constants;
			
			import lib.animation.effect.cfg.ConfigEffect;
			
			import mx.collections.ArrayCollection;
			
			[Bindable]
			private var _triggerType:ArrayCollection = Constants.COMBOBOX_TRIGGER_TYPE;
			[Bindable]
			private var _triggerEffPos:ArrayCollection = Constants.COMBOBOX_EFFECT_POS;
			[Bindable]
			private var _triggerEff:ArrayCollection = new ArrayCollection();
			
			private var _avr:String = "";
			private var _act:String = "";
			
			/**
			 * 
			 **/
			public function setData(avrId:String,actName:String):void
			{
				
			}
			
			public function onCreateClick(event:MouseEvent):void
			{
				if(check())
				{
					
				}
			}
			
			override protected function onShow():void
			{
				for each(var cfg:ConfigEffect in ConfigManager.instance.effects)
				{
					_triggerEff.addItem(cfg);	
				}
				super.onShow();
			}
			
			private function check():Boolean
			{
				if(!triggerName.textValue)
				{
					showAlert("民称不能为空");
					return false;
				}
				
				return true;
			}
			
			[Bindable]
			private var _type:int = 0;
			
			private var _triggerTypeParam:Object = null;
			/**
			 * 类型变更
			 **/
			private function onTriggerTypeChange(event:ExEvent):void
			{
				_triggerTypeParam = event.params;
				_type = _triggerTypeParam.value;
			}
		]]>
	</fx:Script>
	<s:VGroup width="100%" height="100%">
		<extension:ExFormTextItem id="triggerName" labelWidth="60" textWidth="160" labelText="名称" />
		<extension:ExFormTextItem id="triggerFrame" labelWidth="60" textWidth="160" labelText="触发帧" />
		<extension:ExFormCombobox id="triggerType" labelWidth="60" labelText="类型" labelField="label" dataProvider="{_triggerType}" onChange="onTriggerTypeChange(event)" />
		<s:VGroup width="100%" height="100" visible="{(_type == 1)}" includeInLayout="{(_type == 1)}">
			<extension:ExFormCombobox id="effect" labelWidth="60" labelText="特效" labelField="name" dataProvider="{_triggerEff}" />
			<extension:ExFormCombobox id="effectPos" labelWidth="60" labelText="特效位置" labelField="label" dataProvider="{_triggerEffPos}" />
			<extension:ExFormTextItem id="effectOffset" labelWidth="60" textWidth="160" labelText="位置偏移" restrict="0-9," />
		</s:VGroup>
		
		<extension:ExFormTextItem id="triggerValue" labelWidth="60" textWidth="160" labelText="参数" />
		<s:HGroup>
			<s:Button label="预览" />
			<s:Button label="创建" click="onCreateClick(event)" />
		</s:HGroup>
	</s:VGroup>
	
</ui:PopUpWindowProxy>
